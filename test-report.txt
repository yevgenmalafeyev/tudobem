
> tudobem@0.1.0 test:coverage
> jest --coverage --testPathIgnorePatterns=tests/e2e --testPathIgnorePatterns=tests/functional --maxWorkers=1

 ‚ö† Warning: Found multiple lockfiles. Selecting /Users/yevgenmalafeyev/package-lock.json.
   Consider removing the lockfiles at:
   * /Users/yevgenmalafeyev/claude/projects/tudobem/package-lock.json

FAIL tests/integration/hooks/useAnswerChecking.test.tsx (5.305 s)
  ‚óè useAnswerChecking hook ‚Ä∫ should check incorrect answer successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"correctAnswer": "falo", "gapIndex": 1, "hint": {"form": "present indicative", "infinitive": "falar"}, "id": "1", "level": "A1", "sentence": "Eu ___ portugu√™s.", "topic": "present-indicative"}, "fala"
    Received: "falo"

    Number of calls: 1

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div />[39m
      [36m</body>[39m
    [36m</html>[39m

      82 |       expect(mockSetShowAnswer).toHaveBeenCalledWith(true)
      83 |       expect(mockSetIsLoading).toHaveBeenCalledWith(false)
    > 84 |       expect(mockAddIncorrectAnswer).toHaveBeenCalledWith(mockExercise, 'fala')
         |                                      ^
      85 |     })
      86 |   })
      87 |

      at toHaveBeenCalledWith (tests/integration/hooks/useAnswerChecking.test.tsx:84:38)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ‚óè useAnswerChecking hook ‚Ä∫ should use correct API parameters

    expect(received).toEqual(expected) // deep equality

    Expected: {"claudeApiKey": "test-key", "exercise": {"correctAnswer": "falo", "gapIndex": 1, "hint": {"form": "present indicative", "infinitive": "falar"}, "id": "1", "level": "A1", "sentence": "Eu ___ portugu√™s.", "topic": "present-indicative"}, "explanationLanguage": "en", "userAnswer": "falo"}
    Received: undefined

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div />[39m
      [36m</body>[39m
    [36m</html>[39m

      141 |
      142 |     await waitFor(() => {
    > 143 |       expect(requestBody).toEqual({
          |                           ^
      144 |         exercise: mockExercise,
      145 |         userAnswer: 'falo',
      146 |         claudeApiKey: 'test-key',

      at toEqual (tests/integration/hooks/useAnswerChecking.test.tsx:143:27)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ‚óè useAnswerChecking hook ‚Ä∫ should track incorrect answers

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"correctAnswer": "falo", "gapIndex": 1, "hint": {"form": "present indicative", "infinitive": "falar"}, "id": "1", "level": "A1", "sentence": "Eu ___ portugu√™s.", "topic": "present-indicative"}, "fala"
    Received: "falo"

    Number of calls: 1

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div />[39m
      [36m</body>[39m
    [36m</html>[39m

      297 |
      298 |     await waitFor(() => {
    > 299 |       expect(mockAddIncorrectAnswer).toHaveBeenCalledWith(mockExercise, 'fala')
          |                                      ^
      300 |     })
      301 |   })
      302 |

      at toHaveBeenCalledWith (tests/integration/hooks/useAnswerChecking.test.tsx:299:38)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ‚óè useAnswerChecking hook ‚Ä∫ should handle different explanation languages

    TypeError: Cannot read properties of undefined (reading 'explanationLanguage')

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div />[39m
      [36m</body>[39m
    [36m</html>[39m

      343 |
      344 |     await waitFor(() => {
    > 345 |       expect(requestBody.explanationLanguage).toBe('pt')
          |                          ^
      346 |     })
      347 |   })
      348 |

      at explanationLanguage (tests/integration/hooks/useAnswerChecking.test.tsx:345:26)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  ‚óè useAnswerChecking hook ‚Ä∫ should handle empty user answer

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"explanation": Any<String>, "isCorrect": false}

    Number of calls: 0

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div />[39m
      [36m</body>[39m
    [36m</html>[39m

      360 |
      361 |     await waitFor(() => {
    > 362 |       expect(mockSetFeedback).toHaveBeenCalledWith({
          |                               ^
      363 |         isCorrect: false,
      364 |         explanation: expect.any(String)
      365 |       })

      at toHaveBeenCalledWith (tests/integration/hooks/useAnswerChecking.test.tsx:362:31)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

FAIL tests/integration/level-configuration.test.tsx
  ‚óè Console

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:259:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:259:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:311:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:311:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:320:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:320:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:334:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:334:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:347:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:347:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:389:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:389:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:389:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:389:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:389:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:389:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:389:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:389:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:389:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:389:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:425:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:425:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:467:9

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:467:9

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:500:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:500:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:500:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:500:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:500:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:500:11

    console.log
      Generating fresh exercise

      at Object.log [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:75:17)

    console.error
      Error generating exercise: Error: Failed to generate exercise
          at Object.generateNewExercise (/Users/yevgenmalafeyev/claude/projects/tudobem/src/hooks/useExerciseGeneration.ts:90:17)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/level-configuration.test.tsx:500:11

      111 |       focusInput();
      112 |     } catch (error) {
    > 113 |       console.error('Error generating exercise:', error);
          |               ^
      114 |     } finally {
      115 |       setIsLoading(false);
      116 |     }

      at Object.error [as generateNewExercise] (src/hooks/useExerciseGeneration.ts:113:15)
      at tests/integration/level-configuration.test.tsx:500:11

  ‚óè Level Configuration Integration ‚Ä∫ API request level filtering ‚Ä∫ should send only selected levels in API requests

    expect(received).toEqual(expected) // deep equality

    Expected: ["A1", "A2"]
    Received: undefined

      72 |
      73 |       expect(capturedRequestBody).toBeTruthy()
    > 74 |       expect(capturedRequestBody.levels).toEqual(['A1', 'A2'])
         |                                          ^
      75 |     })
      76 |
      77 |     it('should send B1-B2 levels correctly', async () => {

      at Object.toEqual (tests/integration/level-configuration.test.tsx:74:42)

  ‚óè Level Configuration Integration ‚Ä∫ API request level filtering ‚Ä∫ should send B1-B2 levels correctly

    expect(received).toEqual(expected) // deep equality

    Expected: ["B1", "B2"]
    Received: undefined

      104 |       })
      105 |
    > 106 |       expect(capturedRequestBody.levels).toEqual(['B1', 'B2'])
          |                                          ^
      107 |     })
      108 |
      109 |     it('should handle single level selection', async () => {

      at Object.toEqual (tests/integration/level-configuration.test.tsx:106:42)

  ‚óè Level Configuration Integration ‚Ä∫ API request level filtering ‚Ä∫ should handle single level selection

    expect(received).toEqual(expected) // deep equality

    Expected: ["B2"]
    Received: undefined

      136 |       })
      137 |
    > 138 |       expect(capturedRequestBody.levels).toEqual(['B2'])
          |                                          ^
      139 |     })
      140 |
      141 |     it('should not send excluded levels in requests', async () => {

      at Object.toEqual (tests/integration/level-configuration.test.tsx:138:42)

  ‚óè Level Configuration Integration ‚Ä∫ API request level filtering ‚Ä∫ should not send excluded levels in requests

    expect(received).toEqual(expected) // deep equality

    Expected: ["A2", "B1"]
    Received: undefined

      168 |       })
      169 |
    > 170 |       expect(capturedRequestBody.levels).toEqual(['A2', 'B1'])
          |                                          ^
      171 |       expect(capturedRequestBody.levels).not.toContain('A1')
      172 |       expect(capturedRequestBody.levels).not.toContain('B2')
      173 |       expect(capturedRequestBody.levels).not.toContain('C1')

      at Object.toEqual (tests/integration/level-configuration.test.tsx:170:42)

  ‚óè Level Configuration Integration ‚Ä∫ API response level validation ‚Ä∫ should fallback to appropriate level when API fails

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"level": StringMatching /^(B1|B2|A1|A2)$/}

    Number of calls: 0

      261 |
      262 |       // Should use fallback exercise matching requested levels
    > 263 |       expect(mockSetCurrentExercise).toHaveBeenCalledWith(
          |                                      ^
      264 |         expect.objectContaining({
      265 |           level: expect.stringMatching(/^(B1|B2|A1|A2)$/) // Fallback includes A1, A2
      266 |         })

      at Object.toHaveBeenCalledWith (tests/integration/level-configuration.test.tsx:263:38)

  ‚óè Level Configuration Integration ‚Ä∫ configuration changes ‚Ä∫ should generate different exercises when levels change

    expect(received).toEqual(expected) // deep equality

    Expected: ["A1"]
    Received: undefined

      322 |
      323 |       expect(callHistory).toHaveLength(2)
    > 324 |       expect(callHistory[0].levels).toEqual(['A1'])
          |                                     ^
      325 |       expect(callHistory[1].levels).toEqual(['B1'])
      326 |     })
      327 |

      at Object.toEqual (tests/integration/level-configuration.test.tsx:324:37)

  ‚óè Level Configuration Integration ‚Ä∫ configuration changes ‚Ä∫ should handle empty level configuration

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      336 |
      337 |       // Should still work with fallback
    > 338 |       expect(mockSetCurrentExercise).toHaveBeenCalled()
          |                                      ^
      339 |     })
      340 |
      341 |     it('should handle invalid level configuration', async () => {

      at Object.toHaveBeenCalled (tests/integration/level-configuration.test.tsx:338:38)

  ‚óè Level Configuration Integration ‚Ä∫ configuration changes ‚Ä∫ should handle invalid level configuration

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      349 |
      350 |       // Should still work with fallback
    > 351 |       expect(mockSetCurrentExercise).toHaveBeenCalled()
          |                                      ^
      352 |     })
      353 |   })
      354 |

      at Object.toHaveBeenCalled (tests/integration/level-configuration.test.tsx:351:38)

  ‚óè Level Configuration Integration ‚Ä∫ level consistency across exercise generation ‚Ä∫ should maintain level filtering across multiple generations

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 0
    Received array:  []

      395 |         expect(['A2', 'B1']).toContain(level)
      396 |       })
    > 397 |       expect(generatedLevels).toHaveLength(5)
          |                               ^
      398 |     })
      399 |
      400 |     it('should not mix levels within single exercise generation', async () => {

      at Object.toHaveLength (tests/integration/level-configuration.test.tsx:397:31)

  ‚óè Level Configuration Integration ‚Ä∫ level consistency across exercise generation ‚Ä∫ should not mix levels within single exercise generation

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      430 |       
      431 |       // Should set exactly one exercise
    > 432 |       expect(mockSetCurrentExercise).toHaveBeenCalledTimes(1)
          |                                      ^
      433 |       expect(mockSetCurrentExercise).toHaveBeenCalledWith(
      434 |         expect.objectContaining({
      435 |           level: expect.stringMatching(/^(B1|B2)$/)

      at Object.toHaveBeenCalledTimes (tests/integration/level-configuration.test.tsx:432:38)

  ‚óè Level Configuration Integration ‚Ä∫ performance with different level configurations ‚Ä∫ should handle large level arrays efficiently

    expect(received).toEqual(expected) // deep equality

    Expected: ["A1", "A2", "B1", "B2", "C1", "C2"]
    Received: undefined

      469 |       const endTime = Date.now()
      470 |
    > 471 |       expect(capturedRequestBody.levels).toEqual(allLevels)
          |                                          ^
      472 |       expect(endTime - startTime).toBeLessThan(1000) // Should be fast
      473 |     })
      474 |

      at Object.toEqual (tests/integration/level-configuration.test.tsx:471:42)

  ‚óè Level Configuration Integration ‚Ä∫ performance with different level configurations ‚Ä∫ should handle rapid level configuration changes

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 4
    Received number of calls: 0

      503 |
      504 |       // Should have generated exercise for each configuration
    > 505 |       expect(mockSetCurrentExercise).toHaveBeenCalledTimes(4)
          |                                      ^
      506 |     })
      507 |   })
      508 | })

      at Object.toHaveBeenCalledTimes (tests/integration/level-configuration.test.tsx:505:38)

FAIL tests/components/learning/MultipleChoiceOptions.test.tsx
  ‚óè MultipleChoiceOptions ‚Ä∫ should render all options as buttons

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      21 |
      22 |     mockOptions.forEach(option => {
    > 23 |       expect(screen.getByRole('button', { name: option })).toBeInTheDocument()
         |                     ^
      24 |     })
      25 |   })
      26 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:23:21)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/components/learning/MultipleChoiceOptions.test.tsx:22:17)

  ‚óè MultipleChoiceOptions ‚Ä∫ should call setSelectedOption when option is clicked

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      35 |     )
      36 |
    > 37 |     const firstOption = screen.getByRole('button', { name: 'falo' })
         |                                ^
      38 |     fireEvent.click(firstOption)
      39 |
      40 |     expect(mockSetSelectedOption).toHaveBeenCalledWith('falo')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:37:32)

  ‚óè MultipleChoiceOptions ‚Ä∫ should highlight selected option

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"true"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left neo-button-primary"[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text-inverted);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"true"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left neo-button-primary"[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text-inverted);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      51 |     )
      52 |
    > 53 |     const selectedButton = screen.getByRole('button', { name: 'falo' })
         |                                   ^
      54 |     const unselectedButton = screen.getByRole('button', { name: 'fala' })
      55 |
      56 |     expect(selectedButton).toHaveClass('neo-inset')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:53:35)

  ‚óè MultipleChoiceOptions ‚Ä∫ should disable all buttons when showAnswer is true

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      69 |
      70 |     mockOptions.forEach(option => {
    > 71 |       const button = screen.getByRole('button', { name: option })
         |                             ^
      72 |       expect(button).toBeDisabled()
      73 |     })
      74 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:71:29)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/components/learning/MultipleChoiceOptions.test.tsx:70:17)

  ‚óè MultipleChoiceOptions ‚Ä∫ should not call setSelectedOption when disabled

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "fala"

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      84 |     )
      85 |
    > 86 |     const button = screen.getByRole('button', { name: 'fala' })
         |                           ^
      87 |     fireEvent.click(button)
      88 |
      89 |     expect(mockSetSelectedOption).not.toHaveBeenCalled()

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:86:27)

  ‚óè MultipleChoiceOptions ‚Ä∫ should handle single option

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      113 |     )
      114 |
    > 115 |     expect(screen.getByRole('button', { name: 'falo' })).toBeInTheDocument()
          |                   ^
      116 |     expect(screen.getAllByRole('button')).toHaveLength(1)
      117 |   })
      118 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:115:19)

  ‚óè MultipleChoiceOptions ‚Ä∫ should handle option selection change

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"true"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left neo-button-primary"[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text-inverted);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"true"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left neo-button-primary"[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text-inverted);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      127 |     )
      128 |
    > 129 |     let faloButton = screen.getByRole('button', { name: 'falo' })
          |                             ^
      130 |     let falaButton = screen.getByRole('button', { name: 'fala' })
      131 |
      132 |     expect(faloButton).toHaveClass('neo-inset')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:129:29)

  ‚óè MultipleChoiceOptions ‚Ä∫ should apply correct styling classes

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      159 |     )
      160 |
    > 161 |     const container = screen.getByRole('button', { name: 'falo' }).parentElement
          |                              ^
      162 |     expect(container).toHaveClass('grid', 'grid-cols-2', 'gap-2', 'sm:gap-3', 'mb-4', 'sm:mb-6')
      163 |
      164 |     const button = screen.getByRole('button', { name: 'falo' })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:161:30)

  ‚óè MultipleChoiceOptions ‚Ä∫ should handle keyboard navigation

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      176 |     )
      177 |
    > 178 |     const firstButton = screen.getByRole('button', { name: 'falo' })
          |                                ^
      179 |     
      180 |     firstButton.focus()
      181 |     expect(firstButton).toHaveFocus()

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:178:32)

  ‚óè MultipleChoiceOptions ‚Ä∫ should handle options with special characters

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "est√°"

    Here are the accessible roles:

      button:

      Name "A. est√°":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. s√£o":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. cora√ß√£o":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. na√ß√£o":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mest√°[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0ms√£o[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mcora√ß√£o[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mna√ß√£o[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      201 |
      202 |     specialOptions.forEach(option => {
    > 203 |       expect(screen.getByRole('button', { name: option })).toBeInTheDocument()
          |                     ^
      204 |     })
      205 |   })
      206 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:203:21)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/components/learning/MultipleChoiceOptions.test.tsx:202:20)

  ‚óè MultipleChoiceOptions ‚Ä∫ should handle long options

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. estava falando":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. terei falado":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falaria":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mestava falando[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mterei falado[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalaria[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      218 |
      219 |     longOptions.forEach(option => {
    > 220 |       expect(screen.getByRole('button', { name: option })).toBeInTheDocument()
          |                     ^
      221 |     })
      222 |   })
      223 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:220:21)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/components/learning/MultipleChoiceOptions.test.tsx:219:17)

  ‚óè MultipleChoiceOptions ‚Ä∫ should handle rapid clicking

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      232 |     )
      233 |
    > 234 |     const faloButton = screen.getByRole('button', { name: 'falo' })
          |                               ^
      235 |     const falaButton = screen.getByRole('button', { name: 'fala' })
      236 |
      237 |     fireEvent.click(faloButton)

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:234:31)

  ‚óè MultipleChoiceOptions ‚Ä∫ should maintain selection when showAnswer changes

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"true"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left neo-button-primary"[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text-inverted);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"true"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left neo-button-primary"[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text-inverted);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      255 |     )
      256 |
    > 257 |     let selectedButton = screen.getByRole('button', { name: 'falo' })
          |                                 ^
      258 |     expect(selectedButton).toHaveClass('neo-inset')
      259 |
      260 |     rerender(

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:257:33)

  ‚óè MultipleChoiceOptions ‚Ä∫ should have proper button type attributes

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name "falo"

    Here are the accessible roles:

      button:

      Name "A. falo":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "B. fala":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "C. falamos":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      Name "D. falam":
      [36m<button[39m
        [33maria-selected[39m=[32m"false"[39m
        [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
        [33mdata-testid[39m=[32m"multiple-choice-option"[39m
        [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"grid grid-cols-1 sm:grid-cols-2 gap-3"[39m
          [36m>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mA[0m
              [0m. [0m
              [0mfalo[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mB[0m
              [0m. [0m
              [0mfala[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mC[0m
              [0m. [0m
              [0mfalamos[0m
            [36m</button>[39m
            [36m<button[39m
              [33maria-selected[39m=[32m"false"[39m
              [33mclass[39m=[32m"neo-button text-sm sm:text-base p-3 sm:p-4 text-left "[39m
              [33mdata-testid[39m=[32m"multiple-choice-option"[39m
              [33mstyle[39m=[32m"min-height: 44px; color: var(--neo-text);"[39m
            [36m>[39m
              [0mD[0m
              [0m. [0m
              [0mfalam[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      300 |
      301 |     mockOptions.forEach(option => {
    > 302 |       const button = screen.getByRole('button', { name: option })
          |                             ^
      303 |       expect(button).toHaveAttribute('type', 'button')
      304 |     })
      305 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at getByRole (tests/components/learning/MultipleChoiceOptions.test.tsx:302:29)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/components/learning/MultipleChoiceOptions.test.tsx:301:17)

FAIL tests/components/learning/ModeToggle.test.tsx
  ‚óè ModeToggle ‚Ä∫ should render with input mode selected

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      19 |     )
      20 |
    > 21 |     const inputButton = screen.getByRole('button', { name: /input/i })
         |                                ^
      22 |     const multipleChoiceButton = screen.getByRole('button', { name: /multiple choice/i })
      23 |
      24 |     expect(inputButton).toHaveClass('neo-inset')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:21:32)

  ‚óè ModeToggle ‚Ä∫ should render with multiple choice mode selected

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      35 |     )
      36 |
    > 37 |     const inputButton = screen.getByRole('button', { name: /input/i })
         |                                ^
      38 |     const multipleChoiceButton = screen.getByRole('button', { name: /multiple choice/i })
      39 |
      40 |     expect(inputButton).toHaveClass('neo-outset')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:37:32)

  ‚óè ModeToggle ‚Ä∫ should call setLearningMode when input button is clicked

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      51 |     )
      52 |
    > 53 |     const inputButton = screen.getByRole('button', { name: /input/i })
         |                                ^
      54 |     fireEvent.click(inputButton)
      55 |
      56 |     expect(mockSetLearningMode).toHaveBeenCalledWith('input')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:53:32)

  ‚óè ModeToggle ‚Ä∫ should call setLearningMode when multiple choice button is clicked

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/multiple choice/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      66 |     )
      67 |
    > 68 |     const multipleChoiceButton = screen.getByRole('button', { name: /multiple choice/i })
         |                                         ^
      69 |     fireEvent.click(multipleChoiceButton)
      70 |
      71 |     expect(mockSetLearningMode).toHaveBeenCalledWith('multiple-choice')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:68:41)

  ‚óè ModeToggle ‚Ä∫ should render with Portuguese labels

    TestingLibraryElementError: Unable to find an element with the text: Escrita. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mModo de Aprendizagem[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mDigitar Resposta[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mMostrar Op√ß√µes[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      81 |     )
      82 |
    > 83 |     expect(screen.getByText('Escrita')).toBeInTheDocument()
         |                   ^
      84 |     expect(screen.getByText('Escolha M√∫ltipla')).toBeInTheDocument()
      85 |   })
      86 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ModeToggle.test.tsx:83:19)

  ‚óè ModeToggle ‚Ä∫ should render with Ukrainian labels

    TestingLibraryElementError: Unable to find an element with the text: –í–≤–µ–¥–µ–Ω–Ω—è. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0m–†–µ–∂–∏–º –ù–∞–≤—á–∞–Ω–Ω—è[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0m–í–≤–µ—Å—Ç–∏ –í—ñ–¥–ø–æ–≤—ñ–¥—å[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0m–ü–æ–∫–∞–∑–∞—Ç–∏ –í–∞—Ä—ñ–∞–Ω—Ç–∏[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      94 |     )
      95 |
    > 96 |     expect(screen.getByText('–í–≤–µ–¥–µ–Ω–Ω—è')).toBeInTheDocument()
         |                   ^
      97 |     expect(screen.getByText('–ú–Ω–æ–∂–∏–Ω–Ω–∏–π –≤–∏–±—ñ—Ä')).toBeInTheDocument()
      98 |   })
      99 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ModeToggle.test.tsx:96:19)

  ‚óè ModeToggle ‚Ä∫ should have proper accessibility attributes

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      107 |     )
      108 |
    > 109 |     const inputButton = screen.getByRole('button', { name: /input/i })
          |                                ^
      110 |     const multipleChoiceButton = screen.getByRole('button', { name: /multiple choice/i })
      111 |
      112 |     expect(inputButton).toHaveAttribute('type', 'button')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:109:32)

  ‚óè ModeToggle ‚Ä∫ should not call setLearningMode when clicking already selected mode

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      123 |     )
      124 |
    > 125 |     const inputButton = screen.getByRole('button', { name: /input/i })
          |                                ^
      126 |     fireEvent.click(inputButton)
      127 |
      128 |     expect(mockSetLearningMode).toHaveBeenCalledWith('input')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:125:32)

  ‚óè ModeToggle ‚Ä∫ should handle mode changes correctly

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      138 |     )
      139 |
    > 140 |     let inputButton = screen.getByRole('button', { name: /input/i })
          |                              ^
      141 |     let multipleChoiceButton = screen.getByRole('button', { name: /multiple choice/i })
      142 |
      143 |     expect(inputButton).toHaveClass('neo-inset')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:140:30)

  ‚óè ModeToggle ‚Ä∫ should apply correct CSS classes for styling

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      168 |     )
      169 |
    > 170 |     const container = screen.getByRole('button', { name: /input/i }).parentElement
          |                              ^
      171 |     expect(container).toHaveClass('flex', 'neo-outset-sm')
      172 |   })
      173 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:170:30)

  ‚óè ModeToggle ‚Ä∫ should handle keyboard navigation

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      181 |     )
      182 |
    > 183 |     const inputButton = screen.getByRole('button', { name: /input/i })
          |                                ^
      184 |     
      185 |     inputButton.focus()
      186 |     expect(inputButton).toHaveFocus()

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:183:32)

  ‚óè ModeToggle ‚Ä∫ should be responsive

    expect(element).toHaveClass("px-2 sm:px-4")

    Expected the element to have class:
      px-2 sm:px-4
    Received:
      neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary

      205 |     
      206 |     buttons.forEach(button => {
    > 207 |       expect(button).toHaveClass('px-2', 'sm:px-4')
          |                      ^
      208 |       expect(button).toHaveClass('text-xs', 'sm:text-sm')
      209 |     })
      210 |   })

      at toHaveClass (tests/components/learning/ModeToggle.test.tsx:207:22)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/components/learning/ModeToggle.test.tsx:206:13)

  ‚óè ModeToggle ‚Ä∫ should handle rapid mode switching

    TestingLibraryElementError: Unable to find an accessible element with the role "button" and name `/input/i`

    Here are the accessible roles:

      button:

      Name "Type Answer":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
      [36m/>[39m

      Name "Show Options":
      [36m<button[39m
        [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex items-center space-x-3"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"text-xs sm:text-sm"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mLearning Mode[0m
            [0m:[0m
          [36m</span>[39m
          [36m<div[39m
            [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
            [36m>[39m
              [0mType Answer[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
            [36m>[39m
              [0mShow Options[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      219 |     )
      220 |
    > 221 |     const inputButton = screen.getByRole('button', { name: /input/i })
          |                                ^
      222 |     const multipleChoiceButton = screen.getByRole('button', { name: /multiple choice/i })
      223 |
      224 |     fireEvent.click(multipleChoiceButton)

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (tests/components/learning/ModeToggle.test.tsx:221:32)

FAIL tests/api/generate-multiple-choice.test.ts
  ‚óè Console

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:58:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:58:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:88:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:88:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:160:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:160:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:187:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:187:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:219:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:219:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:239:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:239:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:259:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:259:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:285:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:285:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:310:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:310:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:342:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:342:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:376:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:376:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:408:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:408:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:437:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:437:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:469:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:469:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:497:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:497:22)

    console.error
      Error generating multiple choice options: TypeError: _sdk.default is not a constructor
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-multiple-choice.test.ts:521:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:521:22)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should return error for invalid request body

    SyntaxError: Unexpected token 'i', "invalid json" is not valid JSON
        at JSON.parse (<anonymous>)

      41 |     
      42 |     async json() {
    > 43 |       return JSON.parse(this._body);
         |                   ^
      44 |     }
      45 |     
      46 |     async text() {

      at NextRequest.parse [as json] (jest.setup.js:43:19)
      at json (src/app/api/generate-multiple-choice/route.ts:9:80)
      at Object.<anonymous> (tests/api/generate-multiple-choice.test.ts:102:32)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should return error for missing required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      121 |     const data = await response.json()
      122 |
    > 123 |     expect(response.status).toBe(400)
          |                             ^
      124 |     expect(data).toHaveProperty('error')
      125 |   })
      126 |

      at Object.toBe (tests/api/generate-multiple-choice.test.ts:123:29)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should return error for missing API key

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      139 |     const data = await response.json()
      140 |
    > 141 |     expect(response.status).toBe(400)
          |                             ^
      142 |     expect(data).toHaveProperty('error')
      143 |   })
      144 |

      at Object.toBe (tests/api/generate-multiple-choice.test.ts:141:29)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should return error for invalid exercise structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      161 |     const data = await response.json()
      162 |
    > 163 |     expect(response.status).toBe(400)
          |                             ^
      164 |     expect(data).toHaveProperty('error')
      165 |   })
      166 |

      at Object.toBe (tests/api/generate-multiple-choice.test.ts:163:29)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should handle exercise with special characters

    expect(received).toContain(expected) // indexOf

    Expected value: "est√°"
    Received array: ["falo", "fala", "falam", "falamos"]

      288 |     expect(response.status).toBe(200)
      289 |     expect(data).toHaveProperty('options')
    > 290 |     expect(data.options).toContain('est√°')
          |                          ^
      291 |   })
      292 |
      293 |   it('should handle exercise without hint', async () => {

      at Object.toContain (tests/api/generate-multiple-choice.test.ts:290:26)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should handle very long correct answers

    expect(received).toContain(expected) // indexOf

    Expected value: "estav√°mosfastandomuito"
    Received array: ["falam", "falamos", "falo", "fala"]

      500 |     expect(response.status).toBe(200)
      501 |     expect(data).toHaveProperty('options')
    > 502 |     expect(data.options).toContain('estav√°mosfastandomuito')
          |                          ^
      503 |   })
      504 |
      505 |   it('should ensure correct answer is always included', async () => {

      at Object.toContain (tests/api/generate-multiple-choice.test.ts:502:26)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should ensure correct answer is always included

    expect(received).toContain(expected) // indexOf

    Expected value: "falo"
    Received array: ["falamos", "fala", "falam"]

      525 |     expect(data).toHaveProperty('options')
      526 |     // The API should ensure correct answer is included
    > 527 |     expect(data.options).toContain('falo')
          |                          ^
      528 |   })
      529 | })

      at Object.toContain (tests/api/generate-multiple-choice.test.ts:527:26)

FAIL tests/components/learning/FeedbackDisplay.test.tsx
  ‚óè FeedbackDisplay ‚Ä∫ should render correct feedback with green styling

    expect(element).toHaveStyle()

    - Expected

    - color: var(--neo-success);
    + color: var(--neo-text);

      21 |     const feedbackElement = screen.getByText('Correct! You used the right form.')
      22 |     expect(feedbackElement).toBeInTheDocument()
    > 23 |     expect(feedbackElement).toHaveStyle('color: var(--neo-success)')
         |                             ^
      24 |   })
      25 |
      26 |   it('should render incorrect feedback with red styling', () => {

      at Object.toHaveStyle (tests/components/learning/FeedbackDisplay.test.tsx:23:29)

  ‚óè FeedbackDisplay ‚Ä∫ should render incorrect feedback with red styling

    expect(element).toHaveStyle()

    - Expected

    - color: var(--neo-error);
    + color: var(--neo-text);

      34 |     const feedbackElement = screen.getByText('Incorrect. The correct answer is "falo".')
      35 |     expect(feedbackElement).toBeInTheDocument()
    > 36 |     expect(feedbackElement).toHaveStyle('color: var(--neo-error)')
         |                             ^
      37 |   })
      38 |
      39 |   it('should apply correct CSS classes', () => {

      at Object.toHaveStyle (tests/components/learning/FeedbackDisplay.test.tsx:36:29)

  ‚óè FeedbackDisplay ‚Ä∫ should apply correct CSS classes

    expect(element).toHaveClass("neo-inset text-lg sm:text-xl p-3 sm:p-4 mb-4 sm:mb-6")

    Expected the element to have class:
      neo-inset text-lg sm:text-xl p-3 sm:p-4 mb-4 sm:mb-6
    Received:
      text-sm sm:text-base

      46 |
      47 |     const feedbackElement = screen.getByText('Correct!')
    > 48 |     expect(feedbackElement).toHaveClass('neo-inset', 'text-lg', 'sm:text-xl', 'p-3', 'sm:p-4', 'mb-4', 'sm:mb-6')
         |                             ^
      49 |   })
      50 |
      51 |   it('should handle empty explanation', () => {

      at Object.toHaveClass (tests/components/learning/FeedbackDisplay.test.tsx:48:29)

  ‚óè FeedbackDisplay ‚Ä∫ should handle empty explanation

    TestingLibraryElementError: Found multiple elements with the text: 

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"neo-inset mb-4 sm:mb-6 p-3 sm:p-4"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"font-semibold mb-2 text-sm sm:text-base"[39m
            [33mstyle[39m=[32m"color: var(--neo-success-text);"[39m
          [36m>[39m
            [0m‚úì Correct![0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"text-sm sm:text-base"[39m
            [33mstyle[39m=[32m"color: var(--neo-text);"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

    Ignored nodes: comments, script, style
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"neo-inset mb-4 sm:mb-6 p-3 sm:p-4"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"font-semibold mb-2 text-sm sm:text-base"[39m
          [33mstyle[39m=[32m"color: var(--neo-success-text);"[39m
        [36m>[39m
          [0m‚úì Correct![0m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"text-sm sm:text-base"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"neo-inset mb-4 sm:mb-6 p-3 sm:p-4"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"font-semibold mb-2 text-sm sm:text-base"[39m
        [33mstyle[39m=[32m"color: var(--neo-success-text);"[39m
      [36m>[39m
        [0m‚úì Correct![0m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"text-sm sm:text-base"[39m
        [33mstyle[39m=[32m"color: var(--neo-text);"[39m
      [36m/>[39m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mclass[39m=[32m"text-sm sm:text-base"[39m
      [33mstyle[39m=[32m"color: var(--neo-text);"[39m
    [36m/>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"neo-inset mb-4 sm:mb-6 p-3 sm:p-4"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"font-semibold mb-2 text-sm sm:text-base"[39m
            [33mstyle[39m=[32m"color: var(--neo-success-text);"[39m
          [36m>[39m
            [0m‚úì Correct![0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"text-sm sm:text-base"[39m
            [33mstyle[39m=[32m"color: var(--neo-text);"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      57 |     render(<FeedbackDisplay feedback={feedback} appLanguage="en" />)
      58 |
    > 59 |     const feedbackElement = screen.getByText('')
         |                                    ^
      60 |     expect(feedbackElement).toBeInTheDocument()
      61 |   })
      62 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/FeedbackDisplay.test.tsx:59:36)

  ‚óè FeedbackDisplay ‚Ä∫ should handle feedback with newlines

    TestingLibraryElementError: Unable to find an element with the text: Incorrect. The correct answer is "falo". This is the first person singular form. (normalized from 'Incorrect.
    The correct answer is "falo".
    This is the first person singular form.'). This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"neo-inset mb-4 sm:mb-6 p-3 sm:p-4"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"font-semibold mb-2 text-sm sm:text-base"[39m
            [33mstyle[39m=[32m"color: var(--neo-error);"[39m
          [36m>[39m
            [0m‚úó Incorrect[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"text-sm sm:text-base"[39m
            [33mstyle[39m=[32m"color: var(--neo-text);"[39m
          [36m>[39m
            [0mIncorrect.
    The correct answer is "falo".
    This is the first person singular form.[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      117 |     render(<FeedbackDisplay feedback={feedback} appLanguage="en" />)
      118 |
    > 119 |     const feedbackElement = screen.getByText(feedback.explanation)
          |                                    ^
      120 |     expect(feedbackElement).toBeInTheDocument()
      121 |   })
      122 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/FeedbackDisplay.test.tsx:119:36)

  ‚óè FeedbackDisplay ‚Ä∫ should be responsive with different screen sizes

    expect(element).toHaveClass("text-lg sm:text-xl")

    Expected the element to have class:
      text-lg sm:text-xl
    Received:
      text-sm sm:text-base

      142 |
      143 |     const feedbackElement = screen.getByText('Correct!')
    > 144 |     expect(feedbackElement).toHaveClass('text-lg', 'sm:text-xl')
          |                             ^
      145 |     expect(feedbackElement).toHaveClass('p-3', 'sm:p-4')
      146 |     expect(feedbackElement).toHaveClass('mb-4', 'sm:mb-6')
      147 |   })

      at Object.toHaveClass (tests/components/learning/FeedbackDisplay.test.tsx:144:29)

  ‚óè FeedbackDisplay ‚Ä∫ should handle boolean values correctly

    expect(element).toHaveStyle()

    - Expected

    - color: var(--neo-success);
    + color: var(--neo-text);

      179 |
      180 |     let feedbackElement = screen.getByText('Correct!')
    > 181 |     expect(feedbackElement).toHaveStyle('color: var(--neo-success)')
          |                             ^
      182 |
      183 |     rerender(<FeedbackDisplay feedback={incorrectFeedback} appLanguage="en" />)
      184 |

      at Object.toHaveStyle (tests/components/learning/FeedbackDisplay.test.tsx:181:29)

FAIL tests/api/generate-exercise.test.ts
  ‚óè Console

    console.log
      Exercise generation API called

      at log (src/app/api/generate-exercise/route.ts:18:11)

    console.log
      Parsed data: {
        levels: [ 'A1' ],
        selectedTopics: 1,
        hasApiKey: true,
        masteredWordsCount: 0
      }

      at log (src/app/api/generate-exercise/route.ts:38:11)

    console.log
      Claude AI prompt: Mock prompt for exercise generation

      at log (src/app/api/generate-exercise/route.ts:76:11)

    console.error
      Error generating exercise: TypeError: _sdk.default is not a constructor
          at callClaudeApi (/Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:58:21)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-exercise/route.ts:79:45
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:95:14
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-exercise.test.ts:81:22)

      102 |     return createApiResponse(exercise);
      103 |   } catch (error) {
    > 104 |     console.error('Error generating exercise:', error);
          |             ^
      105 |     
      106 |     // Try fallback with original request parameters
      107 |     console.log('Attempting fallback with original parameters');

      at error (src/app/api/generate-exercise/route.ts:104:13)
      at src/lib/api-utils.ts:95:14
      at Object.<anonymous> (tests/api/generate-exercise.test.ts:81:22)

    console.log
      Attempting fallback with original parameters

      at log (src/app/api/generate-exercise/route.ts:107:13)

    console.log
      Fallback exercise found: A1 falo present-indicative

      at log (src/app/api/generate-exercise/route.ts:111:15)

    console.log
      Exercise generation API called

      at log (src/app/api/generate-exercise/route.ts:18:11)

    console.log
      Parsed data: {
        levels: [ 'A1' ],
        selectedTopics: 1,
        hasApiKey: false,
        masteredWordsCount: 0
      }

      at log (src/app/api/generate-exercise/route.ts:38:11)

    console.log
      No API key, using enhanced fallback system

      at log (src/app/api/generate-exercise/route.ts:42:13)

    console.log
      üîÑ Enhanced fallback: Getting exercise { levels: [ 'A1' ], topics: 1 }

      at Function.log [as getExercise] (src/services/enhancedFallbackService.ts:24:13)

    console.log
      ‚úÖ Enhanced fallback: Using database exercise

      at Function.log [as getExercise] (src/services/enhancedFallbackService.ts:30:17)

    console.log
      Returning enhanced fallback exercise: A1 temos present-indicative source: static

      at log (src/app/api/generate-exercise/route.ts:56:15)

    console.log
      Exercise generation API called

      at log (src/app/api/generate-exercise/route.ts:18:11)

    console.error
      API Error: Error: Invalid JSON in request body
          at parseRequestBody (/Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:24:11)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-exercise/route.ts:26:7
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:95:14
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-exercise.test.ts:122:22)

       95 |       return await handler(...args);
       96 |     } catch (error) {
    >  97 |       console.error('API Error:', error);
          |               ^
       98 |       const message = error instanceof Error ? error.message : 'Internal server error';
       99 |       return createApiError(message, 500);
      100 |     }

      at error (src/lib/api-utils.ts:97:15)
      at Object.<anonymous> (tests/api/generate-exercise.test.ts:122:22)

    console.log
      Exercise generation API called

      at log (src/app/api/generate-exercise/route.ts:18:11)

    console.log
      Parsed data: {
        levels: [ 'A1' ],
        selectedTopics: 1,
        hasApiKey: true,
        masteredWordsCount: 0
      }

      at log (src/app/api/generate-exercise/route.ts:38:11)

    console.log
      Claude AI prompt: Mock prompt for exercise generation

      at log (src/app/api/generate-exercise/route.ts:76:11)

    console.error
      Error generating exercise: TypeError: _sdk.default is not a constructor
          at callClaudeApi (/Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:58:21)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-exercise/route.ts:79:45
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:95:14
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/generate-exercise.test.ts:152:22)

      102 |     return createApiResponse(exercise);
      103 |   } catch (error) {
    > 104 |     console.error('Error generating exercise:', error);
          |             ^
      105 |     
      106 |     // Try fallback with original request parameters
      107 |     console.log('Attempting fallback with original parameters');

      at error (src/app/api/generate-exercise/route.ts:104:13)
      at src/lib/api-utils.ts:95:14
      at Object.<anonymous> (tests/api/generate-exercise.test.ts:152:22)

    console.log
      Attempting fallback with original parameters

      at log (src/app/api/generate-exercise/route.ts:107:13)

    console.log
      Fallback exercise found: A1 falo present-indicative

      at log (src/app/api/generate-exercise/route.ts:111:15)

  ‚óè /api/generate-exercise ‚Ä∫ should generate fallback exercise without API key

    expect(received).toHaveProperty(path, value)

    Expected path: "id"

    Expected value: "fallback-1"
    Received value: "c29faa7d-1143-4fed-8394-b1536d7836e3"

      108 |     expect(response.status).toBe(200)
      109 |     expect(data).toHaveProperty('success', true)
    > 110 |     expect(data.data).toHaveProperty('id', 'fallback-1')
          |                       ^
      111 |     expect(data.data).toHaveProperty('sentence')
      112 |     expect(data.data).toHaveProperty('correctAnswer')
      113 |   })

      at Object.toHaveProperty (tests/api/generate-exercise.test.ts:110:23)

FAIL tests/integration/components/Learning-multiple-choice.test.tsx
  ‚óè Console

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

    console.log
      üîÑ Resetting exercise queue

      at log (src/hooks/useExerciseQueue.ts:215:13)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should always include correct answer in multiple choice options

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      76 |
      77 |     // Switch to multiple choice mode
    > 78 |     const multipleChoiceButton = screen.getByText('Show options')
         |                                         ^
      79 |     fireEvent.click(multipleChoiceButton)
      80 |
      81 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:78:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle API failure and still provide correct answer

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       96 |
       97 |     // Switch to multiple choice mode
    >  98 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
       99 |     fireEvent.click(multipleChoiceButton)
      100 |
      101 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:98:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle empty API response and generate fallback options

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      121 |
      122 |     // Switch to multiple choice mode
    > 123 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      124 |     fireEvent.click(multipleChoiceButton)
      125 |
      126 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:123:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle different exercise types correctly

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m casa √© bonita.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      158 |
      159 |     // Switch to multiple choice mode
    > 160 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      161 |     fireEvent.click(multipleChoiceButton)
      162 |
      163 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:160:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle special characters in correct answer

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m falo portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      194 |
      195 |     // Switch to multiple choice mode
    > 196 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      197 |     fireEvent.click(multipleChoiceButton)
      198 |
      199 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:196:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should allow selecting the correct answer

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      214 |
      215 |     // Switch to multiple choice mode
    > 216 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      217 |     fireEvent.click(multipleChoiceButton)
      218 |
      219 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:216:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle long words correctly

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mA [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m √© importante.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      257 |
      258 |     // Switch to multiple choice mode
    > 259 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      260 |     fireEvent.click(multipleChoiceButton)
      261 |
      262 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:259:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle single character answers

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEle [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m professor.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      293 |
      294 |     // Switch to multiple choice mode
    > 295 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      296 |     fireEvent.click(multipleChoiceButton)
      297 |
      298 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:295:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should not show duplicate options

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      313 |
      314 |     // Switch to multiple choice mode
    > 315 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      316 |     fireEvent.click(multipleChoiceButton)
      317 |
      318 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:315:41)

  ‚óè Learning Component - Multiple Choice Options ‚Ä∫ should handle network timeout gracefully

    TestingLibraryElementError: Unable to find an element with the text: Show options. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"max-w-4xl mx-auto p-4 sm:p-6 relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"fixed top-4 right-4 z-50 flex flex-col items-end space-y-2"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"
              relative flex items-center space-x-2 px-3 py-2 rounded-lg text-xs font-medium 
              transition-all duration-300 cursor-pointer select-none
              bg-green-50 text-green-600 border-green-200
              border shadow-sm hover:shadow-md transform hover:scale-105
              min-w-20
            "[39m
              [33mtitle[39m=[32m"Newly generated by Claude AI"[39m
            [36m>[39m
              [36m<span[39m
                [33mclass[39m=[32m"text-sm flex-shrink-0"[39m
              [36m>[39m
                [0mü§ñ[0m
              [36m</span>[39m
              [36m<span[39m
                [33mclass[39m=[32m"font-medium"[39m
              [36m>[39m
                [0mAI Fresh[0m
              [36m</span>[39m
              [36m<div[39m
                [33mclass[39m=[32m"transform transition-transform duration-200 "[39m
              [36m>[39m
                [36m<svg[39m
                  [33mclass[39m=[32m"w-3 h-3"[39m
                  [33mfill[39m=[32m"none"[39m
                  [33mstroke[39m=[32m"currentColor"[39m
                  [33mviewBox[39m=[32m"0 0 24 24"[39m
                [36m>[39m
                  [36m<path[39m
                    [33md[39m=[32m"M19 9l-7 7-7-7"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                  [36m/>[39m
                [36m</svg>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"neo-card-lg"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"mb-4 sm:mb-6"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex justify-between items-center mb-4"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"neo-outset-sm text-xs sm:text-sm px-2 sm:px-3 py-1"[39m
                  [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
                [36m>[39m
                  [0mA1[0m
                [36m</span>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center space-x-3"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-xs sm:text-sm"[39m
                    [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
                  [36m>[39m
                    [0mLearning Mode[0m
                    [0m:[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex neo-inset-sm rounded-lg p-1"[39m
                  [36m>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 neo-button-primary"[39m
                    [36m>[39m
                      [0mType Answer[0m
                    [36m</button>[39m
                    [36m<button[39m
                      [33mclass[39m=[32m"neo-button text-xs sm:text-sm px-2 sm:px-3 py-1 "[39m
                    [36m>[39m
                      [0mShow Options[0m
                    [36m</button>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
              [33mstyle[39m=[32m"color: var(--neo-text);"[39m
            [36m>[39m
              [0mEu [0m
              [36m<span[39m
                [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
              [36m>[39m
                [36m<input[39m
                  [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
                  [33mplaceholder[39m=[32m"falar"[39m
                  [33mtype[39m=[32m"text"[39m
                  [33mvalue[39m=[32m""[39m
                [36m/>[39m
              [36m</span>[39m
              [0m portugu√™s.[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"flex flex-col items-center"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
                [33mdisabled[39m=[32m""[39m
              [36m>[39m
                [0mCheck Answer[0m
              [36m</button>[39m
              [36m<p[39m
                [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
                [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
              [36m>[39m
                [0mPress Enter to check your answer[0m
              [36m</p>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      336 |
      337 |     // Switch to multiple choice mode
    > 338 |     const multipleChoiceButton = screen.getByText('Show options')
          |                                         ^
      339 |     fireEvent.click(multipleChoiceButton)
      340 |
      341 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/integration/components/Learning-multiple-choice.test.tsx:338:41)

FAIL tests/components/learning/ActionButtons.test.tsx
  ‚óè ActionButtons ‚Ä∫ should disable buttons when loading

    TestingLibraryElementError: Unable to find an element with the text: Check Answer. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
            [33mdisabled[39m=[32m""[39m
          [36m>[39m
            [0mChecking...[0m
          [36m</button>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mPress Enter to check your answer[0m
          [36m</p>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      106 |     )
      107 |
    > 108 |     const checkButton = screen.getByText('Check Answer')
          |                                ^
      109 |     expect(checkButton).toBeDisabled()
      110 |   })
      111 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ActionButtons.test.tsx:108:32)

  ‚óè ActionButtons ‚Ä∫ should show loading text when loading

    TestingLibraryElementError: Unable to find an element with the text: Loading.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
            [33mdisabled[39m=[32m""[39m
          [36m>[39m
            [0mChecking...[0m
          [36m</button>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mPress Enter to check your answer[0m
          [36m</p>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      122 |     )
      123 |
    > 124 |     expect(screen.getByText('Loading...')).toBeInTheDocument()
          |                   ^
      125 |   })
      126 |
      127 |   it('should render Portuguese labels', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ActionButtons.test.tsx:124:19)

  ‚óè ActionButtons ‚Ä∫ should render Ukrainian labels

    TestingLibraryElementError: Unable to find an element with the text: –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
          [36m>[39m
            [0m–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –í—ñ–¥–ø–æ–≤—ñ–¥—å[0m
          [36m</button>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0m–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ[0m
          [36m</p>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      152 |     )
      153 |
    > 154 |     expect(screen.getByText('–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å')).toBeInTheDocument()
          |                   ^
      155 |   })
      156 |
      157 |   it('should render next exercise button with correct language', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ActionButtons.test.tsx:154:19)

  ‚óè ActionButtons ‚Ä∫ should apply correct CSS classes

    expect(element).toHaveClass("neo-outset text-lg sm:text-xl px-6 sm:px-8 py-3 sm:py-4")

    Expected the element to have class:
      neo-outset text-lg sm:text-xl px-6 sm:px-8 py-3 sm:py-4
    Received:
      neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]

      183 |
      184 |     const button = screen.getByText('Check Answer')
    > 185 |     expect(button).toHaveClass('neo-outset', 'text-lg', 'sm:text-xl', 'px-6', 'sm:px-8', 'py-3', 'sm:py-4')
          |                    ^
      186 |   })
      187 |
      188 |   it('should handle keyboard navigation', () => {

      at Object.toHaveClass (tests/components/learning/ActionButtons.test.tsx:185:20)

  ‚óè ActionButtons ‚Ä∫ should handle keyboard navigation

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      204 |
      205 |     fireEvent.keyDown(button, { key: 'Enter' })
    > 206 |     expect(mockOnCheckAnswer).toHaveBeenCalledTimes(1)
          |                               ^
      207 |
      208 |     fireEvent.keyDown(button, { key: ' ' })
      209 |     expect(mockOnCheckAnswer).toHaveBeenCalledTimes(2)

      at Object.toHaveBeenCalledTimes (tests/components/learning/ActionButtons.test.tsx:206:31)

  ‚óè ActionButtons ‚Ä∫ should handle state transitions correctly

    TestingLibraryElementError: Unable to find an element with the text: Loading.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
            [33mdisabled[39m=[32m""[39m
          [36m>[39m
            [0mChecking...[0m
          [36m</button>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mPress Enter to check your answer[0m
          [36m</p>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      273 |     )
      274 |
    > 275 |     expect(screen.getByText('Loading...')).toBeInTheDocument()
          |                   ^
      276 |
      277 |     rerender(
      278 |       <ActionButtons

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ActionButtons.test.tsx:275:19)

  ‚óè ActionButtons ‚Ä∫ should have proper button type attributes

    expect(element).toHaveAttribute("type", "button") // element.getAttribute("type") === "button"

    Expected the element to have attribute:
      type="button"
    Received:
      null

      302 |
      303 |     const button = screen.getByText('Check Answer')
    > 304 |     expect(button).toHaveAttribute('type', 'button')
          |                    ^
      305 |   })
      306 |
      307 |   it('should handle loading state in different languages', () => {

      at Object.toHaveAttribute (tests/components/learning/ActionButtons.test.tsx:304:20)

  ‚óè ActionButtons ‚Ä∫ should handle loading state in different languages

    TestingLibraryElementError: Unable to find an element with the text: Carregando.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
            [33mdisabled[39m=[32m""[39m
          [36m>[39m
            [0mA verificar...[0m
          [36m</button>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0mPrima Enter para verificar a resposta[0m
          [36m</p>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      317 |     )
      318 |
    > 319 |     expect(screen.getByText('Carregando...')).toBeInTheDocument()
          |                   ^
      320 |   })
      321 |
      322 |   it('should handle Ukrainian loading state', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ActionButtons.test.tsx:319:19)

  ‚óè ActionButtons ‚Ä∫ should handle Ukrainian loading state

    TestingLibraryElementError: Unable to find an element with the text: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"flex flex-col items-center"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]"[39m
            [33mdisabled[39m=[32m""[39m
          [36m>[39m
            [0m–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞...[0m
          [36m</button>[39m
          [36m<p[39m
            [33mclass[39m=[32m"text-xs sm:text-sm mt-2 opacity-70"[39m
            [33mstyle[39m=[32m"color: var(--neo-text-muted);"[39m
          [36m>[39m
            [0m–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ[0m
          [36m</p>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      332 |     )
      333 |
    > 334 |     expect(screen.getByText('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...')).toBeInTheDocument()
          |                   ^
      335 |   })
      336 |
      337 |   it('should maintain button styling when disabled', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ActionButtons.test.tsx:334:19)

  ‚óè ActionButtons ‚Ä∫ should maintain button styling when disabled

    expect(element).toHaveClass("neo-outset")

    Expected the element to have class:
      neo-outset
    Received:
      neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]

      348 |
      349 |     const button = screen.getByText('Check Answer')
    > 350 |     expect(button).toHaveClass('neo-outset')
          |                    ^
      351 |     expect(button).toBeDisabled()
      352 |   })
      353 |

      at Object.toHaveClass (tests/components/learning/ActionButtons.test.tsx:350:20)

  ‚óè ActionButtons ‚Ä∫ should be responsive

    expect(element).toHaveClass("text-lg sm:text-xl")

    Expected the element to have class:
      text-lg sm:text-xl
    Received:
      neo-button neo-button-primary w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 text-sm sm:text-base min-h-[44px]

      382 |
      383 |     const button = screen.getByText('Check Answer')
    > 384 |     expect(button).toHaveClass('text-lg', 'sm:text-xl')
          |                    ^
      385 |     expect(button).toHaveClass('px-6', 'sm:px-8')
      386 |     expect(button).toHaveClass('py-3', 'sm:py-4')
      387 |   })

      at Object.toHaveClass (tests/components/learning/ActionButtons.test.tsx:384:20)

FAIL tests/components/learning/ExerciseDisplay.test.tsx
  ‚óè ExerciseDisplay ‚Ä∫ should render exercise sentence with input field

    TestingLibraryElementError: Unable to find an element with the text: Eu. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"falar, 1¬™ pessoa"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      39 |     )
      40 |
    > 41 |     expect(screen.getByText('Eu')).toBeInTheDocument()
         |                   ^
      42 |     expect(screen.getByText('portugu√™s.')).toBeInTheDocument()
      43 |     expect(screen.getByRole('textbox')).toBeInTheDocument()
      44 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:41:19)

  ‚óè ExerciseDisplay ‚Ä∫ should render exercise sentence with question mark for multiple choice

    TestingLibraryElementError: Unable to find an element with the text: Eu. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<span[39m
              [33mclass[39m=[32m"text-base sm:text-lg lg:text-xl xl:text-2xl font-bold"[39m
              [33mstyle[39m=[32m"color: var(--neo-accent-text);"[39m
            [36m>[39m
              [0m?[0m
            [36m</span>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      58 |     )
      59 |
    > 60 |     expect(screen.getByText('Eu')).toBeInTheDocument()
         |                   ^
      61 |     expect(screen.getByText('portugu√™s.')).toBeInTheDocument()
      62 |     expect(screen.getByText('?')).toBeInTheDocument()
      63 |     expect(screen.queryByRole('textbox')).not.toBeInTheDocument()

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:60:19)

  ‚óè ExerciseDisplay ‚Ä∫ should render hint with infinitive and person

    TestingLibraryElementError: Unable to find an element with the text: (falar, 1¬™ pessoa). This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"falar, 1¬™ pessoa"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      169 |     )
      170 |
    > 171 |     expect(screen.getByText('(falar, 1¬™ pessoa)')).toBeInTheDocument()
          |                   ^
      172 |   })
      173 |
      174 |   it('should render hint with only infinitive', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:171:19)

  ‚óè ExerciseDisplay ‚Ä∫ should render hint with only infinitive

    TestingLibraryElementError: Unable to find an element with the text: (falar). This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"falar"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      194 |     )
      195 |
    > 196 |     expect(screen.getByText('(falar)')).toBeInTheDocument()
          |                   ^
      197 |   })
      198 |
      199 |   it('should not render hint when no infinitive or person', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:196:19)

  ‚óè ExerciseDisplay ‚Ä∫ should apply correct styling for correct answer

    expect(element).toHaveStyle()

    - Expected

    - color: var(--neo-success);
    + color: var(--neo-success-text);

      254 |
      255 |     const answerSpan = screen.getByText('falo')
    > 256 |     expect(answerSpan).toHaveStyle('color: var(--neo-success)')
          |                        ^
      257 |   })
      258 |
      259 |   it('should apply correct styling for incorrect answer', () => {

      at Object.toHaveStyle (tests/components/learning/ExerciseDisplay.test.tsx:256:24)

  ‚óè ExerciseDisplay ‚Ä∫ should handle exercise without hint

    TestingLibraryElementError: Unable to find an element with the text: Eu. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"?"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      294 |     )
      295 |
    > 296 |     expect(screen.getByText('Eu')).toBeInTheDocument()
          |                   ^
      297 |     expect(screen.getByText('portugu√™s.')).toBeInTheDocument()
      298 |     expect(screen.queryByText(/\(/)).not.toBeInTheDocument()
      299 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:296:19)

  ‚óè ExerciseDisplay ‚Ä∫ should handle exercise with gap at the end

    TestingLibraryElementError: Unable to find an element with the text: Eu falo. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu falo [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"falar, 1¬™ pessoa"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      343 |     )
      344 |
    > 345 |     expect(screen.getByText('Eu falo')).toBeInTheDocument()
          |                   ^
      346 |     expect(screen.getByText('.')).toBeInTheDocument()
      347 |     expect(screen.getByRole('textbox')).toBeInTheDocument()
      348 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:345:19)

  ‚óè ExerciseDisplay ‚Ä∫ should have proper input placeholder

    expect(element).toHaveAttribute("placeholder", "?") // element.getAttribute("placeholder") === "?"

    Expected the element to have attribute:
      placeholder="?"
    Received:
      placeholder="falar, 1¬™ pessoa"

      363 |
      364 |     const input = screen.getByRole('textbox')
    > 365 |     expect(input).toHaveAttribute('placeholder', '?')
          |                   ^
      366 |   })
      367 |
      368 |   it('should apply responsive classes', () => {

      at Object.toHaveAttribute (tests/components/learning/ExerciseDisplay.test.tsx:365:19)

  ‚óè ExerciseDisplay ‚Ä∫ should apply responsive classes

    TestingLibraryElementError: Unable to find an element with the text: Eu. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"falar, 1¬™ pessoa"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      380 |     )
      381 |
    > 382 |     const container = screen.getByText('Eu').parentElement
          |                              ^
      383 |     expect(container).toHaveClass('text-lg', 'sm:text-xl', 'lg:text-2xl')
      384 |   })
      385 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:382:30)

  ‚óè ExerciseDisplay ‚Ä∫ should handle complex hint information

    TestingLibraryElementError: Unable to find an element with the text: (falar, 1¬™ pessoa singular). This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"exercise-container neo-card-sm text-base sm:text-lg lg:text-xl xl:text-2xl mb-3 sm:mb-4 lg:mb-6 leading-relaxed"[39m
          [33mstyle[39m=[32m"color: var(--neo-text);"[39m
        [36m>[39m
          [0mEu [0m
          [36m<span[39m
            [33mclass[39m=[32m"inline-block mx-1 sm:mx-2 min-w-12 sm:min-w-16 lg:min-w-24 text-center"[39m
          [36m>[39m
            [36m<input[39m
              [33mclass[39m=[32m"neo-inset text-center min-w-12 sm:min-w-16 lg:min-w-24 text-base sm:text-lg lg:text-xl xl:text-2xl placeholder:text-gray-400 placeholder:opacity-70"[39m
              [33mplaceholder[39m=[32m"falar, 1¬™ pessoa singular"[39m
              [33mtype[39m=[32m"text"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</span>[39m
          [0m portugu√™s.[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      407 |     )
      408 |
    > 409 |     expect(screen.getByText('(falar, 1¬™ pessoa singular)')).toBeInTheDocument()
          |                   ^
      410 |   })
      411 | })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (tests/components/learning/ExerciseDisplay.test.tsx:409:19)

FAIL tests/unit/services/exerciseService.test.ts
  ‚óè Console

    console.log
      getFallbackExercise called with levels: [ 'A1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 5

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 5

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'Z1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level Z1: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 0

      at log (src/services/exerciseService.ts:271:11)

    console.warn
      No exercises available for selected levels: [ 'Z1' ]

      273 |   // If no exercises for selected levels, return null - don't fallback to A1
      274 |   if (availableExercises.length === 0) {
    > 275 |     console.warn('No exercises available for selected levels:', levels);
          |             ^
      276 |     return null;
      277 |   }
      278 |   

      at warn (src/services/exerciseService.ts:275:13)
      at Object.<anonymous> (tests/unit/services/exerciseService.test.ts:79:43)

    console.log
      getFallbackExercise called with levels: [] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.warn
      Invalid levels parameter: []

      258 |   // Handle null/undefined/empty levels
      259 |   if (!levels || !Array.isArray(levels) || levels.length === 0) {
    > 260 |     console.warn('Invalid levels parameter:', levels);
          |             ^
      261 |     return null;
      262 |   }
      263 |   

      at warn (src/services/exerciseService.ts:260:13)
      at Object.<anonymous> (tests/unit/services/exerciseService.test.ts:85:43)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'INVALID' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level INVALID: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 5

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 5

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

  ‚óè exerciseService ‚Ä∫ fallbackExercises ‚Ä∫ should have exercises for all levels

    expect(received).toHaveLength(expected)

    Matcher error: expected value must be a non-negative integer

    Expected has type:  object
    Expected has value: Any<Number>

       9 |       levels.forEach(level => {
      10 |         expect(fallbackExercises[level]).toBeDefined()
    > 11 |         expect(fallbackExercises[level]).toHaveLength(expect.any(Number))
         |                                          ^
      12 |       })
      13 |     })
      14 |

      at toHaveLength (tests/unit/services/exerciseService.test.ts:11:42)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/services/exerciseService.test.ts:9:14)

  ‚óè exerciseService ‚Ä∫ fallbackExercises ‚Ä∫ should have sentences with gaps

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 1

      39 |         exercises.forEach(exercise => {
      40 |           expect(exercise.sentence).toContain('___')
    > 41 |           expect(exercise.gapIndex).toBe(exercise.sentence.indexOf('___'))
         |                                     ^
      42 |         })
      43 |       })
      44 |     })

      at toBe (tests/unit/services/exerciseService.test.ts:41:37)
          at Array.forEach (<anonymous>)
      at forEach (tests/unit/services/exerciseService.test.ts:39:19)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/services/exerciseService.test.ts:38:40)

  ‚óè exerciseService ‚Ä∫ createExercise ‚Ä∫ should create exercise with all required properties

    expect(received).toHaveProperty(path, value)

    Expected path: "gapIndex"

    Expected value: 1
    Received value: 3

      128 |       expect(exercise).toHaveProperty('id')
      129 |       expect(exercise).toHaveProperty('sentence', exerciseData.sentence)
    > 130 |       expect(exercise).toHaveProperty('gapIndex', 1)
          |                        ^
      131 |       expect(exercise).toHaveProperty('correctAnswer', exerciseData.correctAnswer)
      132 |       expect(exercise).toHaveProperty('topic', exerciseData.topic)
      133 |       expect(exercise).toHaveProperty('level', exerciseData.level)

      at Object.toHaveProperty (tests/unit/services/exerciseService.test.ts:130:24)

  ‚óè exerciseService ‚Ä∫ createExercise ‚Ä∫ should generate unique IDs

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "1752963286605"

      172 |       const exercise2 = createExercise(exerciseData)
      173 |       
    > 174 |       expect(exercise1.id).not.toBe(exercise2.id)
          |                                ^
      175 |     })
      176 |
      177 |     it('should handle optional hint', () => {

      at Object.toBe (tests/unit/services/exerciseService.test.ts:174:32)

FAIL tests/integration/api/generate-multiple-choice.test.ts
  ‚óè Console

    console.error
      Error generating multiple choice options: AnthropicError: It looks like you're running in a browser-like environment.
      
      This is disabled by default, as it risks exposing your secret API credentials to attackers.
      If you understand the risks and have appropriate mitigations in place,
      you can set the `dangerouslyAllowBrowser` option to `true`, e.g.,
      
      new Anthropic({ apiKey, dangerouslyAllowBrowser: true });
      
          at new BaseAnthropic (/Users/yevgenmalafeyev/claude/projects/tudobem/node_modules/@anthropic-ai/sdk/src/client.ts:284:13)
          at new Anthropic (/Users/yevgenmalafeyev/claude/projects/tudobem/node_modules/@anthropic-ai/sdk/client.js:530:9)
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/api/generate-multiple-choice.test.ts:68:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/integration/api/generate-multiple-choice.test.ts:68:22)

    console.error
      Error generating multiple choice options: AnthropicError: It looks like you're running in a browser-like environment.
      
      This is disabled by default, as it risks exposing your secret API credentials to attackers.
      If you understand the risks and have appropriate mitigations in place,
      you can set the `dangerouslyAllowBrowser` option to `true`, e.g.,
      
      new Anthropic({ apiKey, dangerouslyAllowBrowser: true });
      
          at new BaseAnthropic (/Users/yevgenmalafeyev/claude/projects/tudobem/node_modules/@anthropic-ai/sdk/src/client.ts:284:13)
          at new Anthropic (/Users/yevgenmalafeyev/claude/projects/tudobem/node_modules/@anthropic-ai/sdk/client.js:530:9)
          at POST (/Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/generate-multiple-choice/route.ts:22:23)
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/integration/api/generate-multiple-choice.test.ts:121:22)

      45 |     });
      46 |   } catch (error) {
    > 47 |     console.error('Error generating multiple choice options:', error);
         |             ^
      48 |     
      49 |     // Fallback to basic distractors
      50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);

      at error (src/app/api/generate-multiple-choice/route.ts:47:13)
      at Object.<anonymous> (tests/integration/api/generate-multiple-choice.test.ts:121:22)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should handle different exercise types

    expect(received).toContain(expected) // indexOf

    Expected value: "a"
    Received array: ["falo", "fala", "falamos", "falam"]

      102 |     expect(response.status).toBe(200)
      103 |     expect(data.options).toBeDefined()
    > 104 |     expect(data.options).toContain('a') // Always includes correct answer
          |                          ^
      105 |   })
      106 |
      107 |   it('should handle missing exercise data', async () => {

      at Object.toContain (tests/integration/api/generate-multiple-choice.test.ts:104:26)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should handle missing exercise data

    TypeError: Cannot read properties of undefined (reading 'correctAnswer')

      48 |     
      49 |     // Fallback to basic distractors
    > 50 |     const distractors = generateBasicDistractors(exercise.correctAnswer);
         |                                                           ^
      51 |     const options = processMultipleChoiceOptions(exercise.correctAnswer, distractors);
      52 |     
      53 |     return NextResponse.json({

      at correctAnswer (src/app/api/generate-multiple-choice/route.ts:50:59)
      at Object.<anonymous> (tests/integration/api/generate-multiple-choice.test.ts:121:22)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should handle invalid JSON

    SyntaxError: Unexpected token 'i', "invalid json" is not valid JSON
        at JSON.parse (<anonymous>)

      41 |     
      42 |     async json() {
    > 43 |       return JSON.parse(this._body);
         |                   ^
      44 |     }
      45 |     
      46 |     async text() {

      at NextRequest.parse [as json] (jest.setup.js:43:19)
      at json (src/app/api/generate-multiple-choice/route.ts:9:80)
      at Object.<anonymous> (tests/integration/api/generate-multiple-choice.test.ts:135:32)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should always return correct answer in options regardless of input

    expect(received).toContain(expected) // indexOf

    Expected value: "est√°"
    Received array: ["falo", "fala", "falamos", "falam"]

      169 |
      170 |       expect(response.status).toBe(200)
    > 171 |       expect(data.options).toContain(testCase.expected)
          |                            ^
      172 |     }
      173 |   })
      174 |

      at Object.toContain (tests/integration/api/generate-multiple-choice.test.ts:171:28)

  ‚óè /api/generate-multiple-choice ‚Ä∫ should handle special characters in correct answer

    expect(received).toContain(expected) // indexOf

    Expected value: "n√£o"
    Received array: ["falo", "fala", "falamos", "falam"]

      198 |
      199 |     expect(response.status).toBe(200)
    > 200 |     expect(data.options).toContain('n√£o')
          |                          ^
      201 |   })
      202 |
      203 |   it('should return unique options', async () => {

      at Object.toContain (tests/integration/api/generate-multiple-choice.test.ts:200:26)

FAIL ./debug-production.spec.ts
  ‚óè Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test';
      2 |
    > 3 | test.describe('Production Debugging', () => {
        |      ^
      4 |   test('debug level filtering issue', async ({ page }) => {
      5 |     const apiRequests: any[] = [];
      6 |     const apiResponses: any[] = [];

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (debug-production.spec.ts:3:6)

PASS tests/api/check-answer.test.ts
  ‚óè Console

    console.error
      API Error: Error: Invalid JSON in request body
          at parseRequestBody (/Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:24:11)
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/app/api/check-answer/route.ts:11:64
          at /Users/yevgenmalafeyev/claude/projects/tudobem/src/lib/api-utils.ts:95:14
          at Object.<anonymous> (/Users/yevgenmalafeyev/claude/projects/tudobem/tests/api/check-answer.test.ts:157:22)

       95 |       return await handler(...args);
       96 |     } catch (error) {
    >  97 |       console.error('API Error:', error);
          |               ^
       98 |       const message = error instanceof Error ? error.message : 'Internal server error';
       99 |       return createApiError(message, 500);
      100 |     }

      at error (src/lib/api-utils.ts:97:15)
      at Object.<anonymous> (tests/api/check-answer.test.ts:157:22)

PASS tests/unit/utils/validation.test.ts
PASS tests/unit/services/levelValidation.test.ts
  ‚óè Console

    console.log
      getFallbackExercise called with levels: [ 'A1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 5

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 5

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'B1', 'B2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B2: 8

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 11

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 11

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B2 esteja present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 7

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 7

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'C1', 'C2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level C1: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level C2: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 0

      at log (src/services/exerciseService.ts:271:11)

    console.warn
      No exercises available for selected levels: [ 'C1', 'C2' ]

      273 |   // If no exercises for selected levels, return null - don't fallback to A1
      274 |   if (availableExercises.length === 0) {
    > 275 |     console.warn('No exercises available for selected levels:', levels);
          |             ^
      276 |     return null;
      277 |   }
      278 |   

      at warn (src/services/exerciseService.ts:275:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:108:43)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'INVALID_LEVEL' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level INVALID_LEVEL: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 5

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 5

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 9

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 9

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 temos present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 te direct-object-pronouns

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 √© ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 iria conditional-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 vamos future-simple

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 fui preterite-perfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 chegues present-subjunctive

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A2 era imperfect

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 A articles

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'A2', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A2: 4

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 12

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 12

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 est√° ser-estar

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'B1', 'A1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 8

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 8

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: B1 Vem imperative-mood

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [ 'A1', 'B1' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level A1: 5

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level B1: 3

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 8

      at log (src/services/exerciseService.ts:271:11)

    console.log
      Final filtered exercises (after removing mastered): 8

      at log (src/services/exerciseService.ts:295:11)

    console.log
      Selected exercise: A1 falo present-indicative

      at log (src/services/exerciseService.ts:300:13)

    console.log
      getFallbackExercise called with levels: [] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.warn
      Invalid levels parameter: []

      258 |   // Handle null/undefined/empty levels
      259 |   if (!levels || !Array.isArray(levels) || levels.length === 0) {
    > 260 |     console.warn('Invalid levels parameter:', levels);
          |             ^
      261 |     return null;
      262 |   }
      263 |   

      at warn (src/services/exerciseService.ts:260:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:276:43)

    console.log
      getFallbackExercise called with levels: undefined topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.warn
      Invalid levels parameter: undefined

      258 |   // Handle null/undefined/empty levels
      259 |   if (!levels || !Array.isArray(levels) || levels.length === 0) {
    > 260 |     console.warn('Invalid levels parameter:', levels);
          |             ^
      261 |     return null;
      262 |   }
      263 |   

      at warn (src/services/exerciseService.ts:260:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:281:43)

    console.log
      getFallbackExercise called with levels: null topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.warn
      Invalid levels parameter: null

      258 |   // Handle null/undefined/empty levels
      259 |   if (!levels || !Array.isArray(levels) || levels.length === 0) {
    > 260 |     console.warn('Invalid levels parameter:', levels);
          |             ^
      261 |     return null;
      262 |   }
      263 |   

      at warn (src/services/exerciseService.ts:260:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:286:43)

    console.log
      getFallbackExercise called with levels: [ 'INVALID', 'ALSO_INVALID' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level INVALID: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level ALSO_INVALID: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 0

      at log (src/services/exerciseService.ts:271:11)

    console.warn
      No exercises available for selected levels: [ 'INVALID', 'ALSO_INVALID' ]

      273 |   // If no exercises for selected levels, return null - don't fallback to A1
      274 |   if (availableExercises.length === 0) {
    > 275 |     console.warn('No exercises available for selected levels:', levels);
          |             ^
      276 |     return null;
      277 |   }
      278 |   

      at warn (src/services/exerciseService.ts:275:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:291:43)

    console.log
      getFallbackExercise called with levels: [ 'a1', 'a2' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level a1: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level a2: 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 0

      at log (src/services/exerciseService.ts:271:11)

    console.warn
      No exercises available for selected levels: [ 'a1', 'a2' ]

      273 |   // If no exercises for selected levels, return null - don't fallback to A1
      274 |   if (availableExercises.length === 0) {
    > 275 |     console.warn('No exercises available for selected levels:', levels);
          |             ^
      276 |     return null;
      277 |   }
      278 |   

      at warn (src/services/exerciseService.ts:275:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:297:43)

    console.log
      getFallbackExercise called with levels: [ ' A1 ', ' A2 ' ] topics: []

      at log (src/services/exerciseService.ts:256:11)

    console.log
      Exercises for level  A1 : 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Exercises for level  A2 : 0

      at log (src/services/exerciseService.ts:267:13)
          at Array.flatMap (<anonymous>)

    console.log
      Total available exercises for selected levels: 0

      at log (src/services/exerciseService.ts:271:11)

    console.warn
      No exercises available for selected levels: [ ' A1 ', ' A2 ' ]

      273 |   // If no exercises for selected levels, return null - don't fallback to A1
      274 |   if (availableExercises.length === 0) {
    > 275 |     console.warn('No exercises available for selected levels:', levels);
          |             ^
      276 |     return null;
      277 |   }
      278 |   

      at warn (src/services/exerciseService.ts:275:13)
      at Object.<anonymous> (tests/unit/services/levelValidation.test.ts:302:43)

PASS tests/unit/utils/prompts.test.ts
PASS tests/unit/services/multipleChoiceService.test.ts

<--- Last few GCs --->

[32834:0x138008000]    20327 ms: Scavenge (interleaved) 4057.6 (4125.0) -> 4057.6 (4126.0) MB, pooled: 0 MB, 10.33 / 0.00 ms  (average mu = 0.264, current mu = 0.154) allocation failure; 
[32834:0x138008000]    20365 ms: Scavenge (interleaved) 4058.6 (4126.0) -> 4058.6 (4149.0) MB, pooled: 0 MB, 36.58 / 0.00 ms  (average mu = 0.264, current mu = 0.154) allocation failure; 


<--- JS stacktrace --->

FATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory
----- Native stack trace -----

 1: 0x100589cac node::OOMErrorHandler(char const*, v8::OOMDetails const&) [/usr/local/bin/node]
 2: 0x10075f998 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [/usr/local/bin/node]
 3: 0x10096f0c0 v8::internal::Heap::stack() [/usr/local/bin/node]
 4: 0x10096d460 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/usr/local/bin/node]
 5: 0x100961a48 v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/usr/local/bin/node]
 6: 0x100962280 v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/usr/local/bin/node]
 7: 0x1009455a0 v8::internal::Factory::NewFillerObject(int, v8::internal::AllocationAlignment, v8::internal::AllocationType, v8::internal::AllocationOrigin) [/usr/local/bin/node]
 8: 0x100d61050 v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [/usr/local/bin/node]
 9: 0x101221af4 Builtins_CEntry_Return1_ArgvOnStack_NoBuiltinExit [/usr/local/bin/node]
10: 0x1011c6704 Builtins_ExtractFastJSArray [/usr/local/bin/node]
11: 0x101256d2c Builtins_ArrayPrototypeSlice [/usr/local/bin/node]
12: 0x1075d2804 
13: 0x10118cef0 Builtins_InterpreterEntryTrampoline [/usr/local/bin/node]
14: 0x10118cef0 Builtins_InterpreterEntryTrampoline [/usr/local/bin/node]
15: 0x1073df850 
16: 0x10118cef0 Builtins_InterpreterEntryTrampoline [/usr/local/bin/node]
17: 0x1074216d0 
18: 0x1012923a0 Builtins_PromiseConstructor [/usr/local/bin/node]
19: 0x101189fbc Builtins_JSBuiltinsConstructStub [/usr/local/bin/node]
20: 0x107424080 
21: 0x107492c1c 
22: 0x1011c9290 Builtins_AsyncFunctionAwaitResolveClosure [/usr/local/bin/node]
23: 0x1012944d8 Builtins_PromiseFulfillReactionJob [/usr/local/bin/node]
24: 0x1011b9594 Builtins_RunMicrotasks [/usr/local/bin/node]
25: 0x10118aaf4 Builtins_JSRunMicrotasksEntry [/usr/local/bin/node]
26: 0x1008c6f7c v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&) [/usr/local/bin/node]
27: 0x1008c7824 v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&) [/usr/local/bin/node]
28: 0x1008c795c v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*) [/usr/local/bin/node]
29: 0x1008f4b80 v8::internal::MicrotaskQueue::RunMicrotasks(v8::internal::Isolate*) [/usr/local/bin/node]
30: 0x1008f5304 v8::internal::MicrotaskQueue::PerformCheckpoint(v8::Isolate*) [/usr/local/bin/node]
31: 0x1004899a8 node::InternalCallbackScope::Close() [/usr/local/bin/node]
32: 0x100489cc4 node::InternalMakeCallback(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context, v8::Local<v8::Value>) [/usr/local/bin/node]
33: 0x100489fd0 node::InternalMakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context, v8::Local<v8::Value>) [/usr/local/bin/node]
34: 0x100517a64 node::Environment::CheckImmediate(uv_check_s*) [/usr/local/bin/node]
35: 0x10117220c uv__run_check [/usr/local/bin/node]
36: 0x10116b22c uv_run [/usr/local/bin/node]
37: 0x10048a4f4 node::SpinEventLoopInternal(node::Environment*) [/usr/local/bin/node]
38: 0x1005d4e74 node::NodeMainInstance::Run() [/usr/local/bin/node]
39: 0x100545008 node::Start(int, char**) [/usr/local/bin/node]
40: 0x19304ab98 start [/usr/lib/dyld]
